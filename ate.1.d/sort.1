.if \n[include_flag]==0 \{\
.  TH debug 1
.  so macros.1
.\}
.SS SORT
.PP
Generate a sorted table with the rows sorted based on the order
imposed by a callback function.
The sorted order can be written back to the original source table
or installed into a new table based on the use or value of the
.I sorted_handle_name
argument.
.PP
Additionally, a table that is sorted on the first field can
be used for
.B seek_key
actions.
See
.B Sorted Key Tables
below.
.PP
.B ate sort
.I handle_name comparison_function
.RI [ sorted_handle_name | --\ ... ]
.RS 7
.arg_handle
.TP
.I comparison_function
the name of a script callback function that will report the
relative order of two given rows
.TP
.I sorted_handle_name
the name to use for the new sorted handle.
To sort the table in-place, omit this argument or use
.B --
as a placeholder if extra arguments are used.
.TP
.RI [ ... ]
optional extra arguments, as needed, to be transmitted to the
.I comparison_function
for each row.
.RE
.PP
.B Comparison Callback Function
.RS 7
.PP
The callback
.I comparison_function
ranks two rows according to which should go first.
It will get three variable name arguments with which it will make
local nameref variables to access their contents and to return the
comparison.
.TS
tab(|);
l lx.
\(Do1|T{
.B comparison result
variable name to which the result of the comparison between the left
and right row is to be written
T}
\(Do2|T{
.B left row
array name of the current comparison
T}
\(Do3|T{
.B right row
array name of the current comparison
T}
\&...|T{
.B extra arguments
that can be optionally passed to the
.B sort
action
T}
.TE

Assuming a nameref variable for
.B \(Do1
named
.BR comp_result ,
set
.B comp_result
to an integer value based on how the left and right rows should be
ordered.
.TS
tab(|);
l lx.
left before right|T{
set
.B comp_result
to a negative integer
T}
right before left|T{
set
.B comp_result
to a positive integer
T}
left equals right|T{
set
.B comp_result
to 0
T}
.TE
.PP
.B DO NOT
return the result with a
.B return
statement.
This will lead to disappointment and frustration..
.RE
.SS Sorted Key Tables
.PP
Since
.B seek_key
searches based on the first field of a table, specially-prepared
sorted tables can sometimes be used in situations that would
otherwise required two tables (an index table and a data table).
.TP
.B Sort on first column
This is the only field
.B seek_key
reads, so there can be no exceptions to this rule.
.TP
.B Sort in strict alphabetical or numeric order
While the
.B sort
action requires a sorting function, which can consider multiple
columns or external information to determine the order, the
.B seek_key
comparisons are done internally without provision to provide the
same comparison function

