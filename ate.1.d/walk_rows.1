.if \n[include_flag]==0 \{\
.  TH debug 1
.  so macros.1
.\}
.SS WALK_ROWS
.PP
Repeatedly invokes a callback function with a row index value and
the name of an array containing a row's contents.
If the
.IR starting_row " and " row_count
parameters are used, they will determine which rows are processed.
Otherwise, every table row will be sent to the callback function.
.PP
If the callback function returns 0 or nothing, the next row will be
sent.
If the callback function return non-0, the row walk
will be terminated.
.PP
.proto_walk_rows
.RS 4
.arg_handle
.TP
.I callback
to a script function that
.B ate
will call with each indexed table row.
.TP
.BI "-k " sorting_key
provides a key to use for ordering the rows.
If
.I sorting_key
is  specified, the
.IR starting_row " and " row_count
options will refer to row indexes in the key table, usually as
returned by a call to the
.B seek_key
action.
.TP
.BI "-s " starting_row
If specified, this is the (0-based) row number of the first
row to be sent to the callback function.
.TP
.BI  "-c " row_count
If specified (following the
.IR starting_row ),
this is the number of rows to send to the callback function.
.TP
.RI [ ... ]
optional extra arguments, as needed, to be transmitted to the
.I callback_name
function for each row.
.RE
.PP
The callback function will get the following arguments:
.TS
tab(|) center;
l l.
\(Do1|the name of array containing a row's contents
\(Do2|integer row index in source table
\(Do3|the name of the row's source \fBate\fP handle
\(Do4|integer row index in sorting table
\&....|optional extra arguments passed to the \fBwalk_rows\fP action.
.TE
.PP
Refer to
.BR "WALK_ROWS EXAMPLES " and " FORMATTED TABLE EXAMPLE"
below.
